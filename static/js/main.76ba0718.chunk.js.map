{"version":3,"sources":["components/Login.js","components/Register.js","components/Nav.js","components/Home.js","utils/Class.js","utils/dbOpr.js","components/playSong.js","components/ListTheSongs.js","components/Playlist.js","components/Song.js","components/SongsList.js","components/AddSong.js","utils/songOpr.js","containers/MusicApp.js","utils/Ajax.js","App.js","serviceWorker.js","index.js","utils/db.js"],"names":["Login","props","_React$createElement","react_default","a","createElement","className","onSubmit","login","id","Object","defineProperty","type","placeholder","loginMsg","Register","reg","Nav","NavLink","to","activeClassName","src","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","isUser","Home","registerObj","name","username","password","classCallCheck","this","loginObj","pwd","addObj","image","trackName","trackViewUrl","songUrl","artistUrl","arguments","length","undefined","likedSong","playlist","registerOperations","userObj","firebase","ref","set","Promise","resolve","reject","on","snapshot","val","loginOperations","songDbOperations","localStorage","getItem","console","log","obj","song","PlaySong","url","controls","ListTheSongs","_Component","_this","possibleConstructorReturn","getPrototypeOf","call","state","like","remove","inherits","createClass","key","value","setState","objectSpread","fn","_this2","onClick","playSongUrl","playSong_PlaySong","playsong","addToPlaylist","alert","Component","Playlist","map","i","ListTheSongs_ListTheSongs","Song","add","href","target","SongsList","songList","AddSong","msg","search","songs","Song_Song","songOperations","fillSongs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","push","artworkUrl100","previewUrl","artistViewUrl","err","return","MusicApp","regMsg","songsArray","songMsg","songsList","playlistSongs","addSongsToList","event","preventDefault","querySelector","userObject","then","data","_this3","setItem","loadPlaylist","fetch","response","json","results","Ajax","fillsongs","bind","_this4","_this5","_this6","_this7","Nav_Nav","Home_Home","Switch","Route","exact","path","component","render","Login_Login","onLogin","Register_Register","onRegister","SongsList_SongsList","AddSong_AddSong","searchSong","addSong","Playlist_Playlist","App","MusicApp_MusicApp","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76ba0718.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './Login.css'\r\nexport const Login=(props)=>{\r\n    return(\r\n        <div>\r\n            <div className = \"header\">\r\n            <h1>Login !</h1>\r\n            </div>\r\n           \r\n  <form onSubmit = {props.login} className = \"group\">\r\n            <div className = \"form-group\">\r\n            <label>Username</label>\r\n            <input id = \"username\" className = \"form-control\" id = \"username\" placeholder = \"Enter your username\" type=\"text\"/>\r\n            </div>\r\n            <div className = \"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" id = \"pwd\" className = \"form-control\" placeholder = \"Enter your password\"/>\r\n            </div>\r\n            <button className = \"btn btn-dark\">Login</button>\r\n            <h2>{props.loginMsg}</h2>\r\n        </form>\r\n        </div>\r\n      \r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Register = (props)=>{\r\n    // console.log(props.reg);\r\n    return(\r\n        <div>\r\n        <div className = \"header\">\r\n        <h1>Register !</h1>\r\n        </div>\r\n        <form onSubmit = {props.reg} className = \"group\">\r\n        <div className = \"form-group\">\r\n        <label>Name</label>\r\n        <input type=\"text\" id = \"name\" placeholder = \"Enter your name\" className = \"form-control\"/>\r\n        </div>\r\n        <div className = \"form-group\">\r\n        <label>Username</label>\r\n        <input type=\"text\" id = \"username\" placeholder = \"Enter your username\" className = \"form-control\"/>\r\n        </div>\r\n        <div className = \"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" id = \"pwd\" placeholder = \"Enter your password\" className = \"form-control\"/>\r\n        </div>\r\n       <button className = \"btn btn-dark\">Submit</button>\r\n       {/* {props.loginMsg?  alert(/);} */}\r\n      \r\n    </form>\r\n    </div>\r\n    )\r\n \r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Nav = (props)=>{\r\n  // var name = localStorage.getItem('name');\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n        <a className=\"navbar-brand\"><NavLink to = \"/\" activeClassName = \"active\"><img src=\"https://wynk.in/assets/images/logo-wht2.svg\" alt=\"\"/></NavLink></a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n         <ul className=\"navbar-nav mr-auto\">\r\n\r\n         </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n          {!props.isUser ?\r\n          <ul className=\"navbar-nav mr-auto\">\r\n         \r\n           <li className=\"nav-item\">\r\n              <a className=\"nav-link\"><NavLink to = \"/login\">Login</NavLink></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\"><NavLink to = \"/register\">Register</NavLink></a>\r\n            </li>\r\n          \r\n          \r\n          </ul>\r\n          :\r\n          <ul className=\"navbar-nav mr-auto\">\r\n         \r\n          <li className=\"nav-item\">\r\n             <a className=\"nav-link\"><NavLink to = \"/list\">Songs List</NavLink></a>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n             <a className=\"nav-link\"><NavLink to = \"/addSong\">Add your song!</NavLink></a>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n             <a className=\"nav-link\"><NavLink to = \"/playlist\">Playlist</NavLink></a>\r\n           </li>\r\n         \r\n         </ul>\r\n          }\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    )\r\n}","import React from 'react';\r\nimport './Home.css'\r\nexport const Home = ()=>{\r\n    return(\r\n        <div id = \"home\">\r\n        <h1>Where words fail, music speaks! </h1>\r\n        </div>\r\n       \r\n    )\r\n}","\r\n\r\nexport class registerObj{\r\n    constructor(name,username,password){\r\n        this.name = name;\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n\r\n}\r\n\r\nexport class loginObj{\r\n    constructor(username,pwd){\r\n        this.username = username;\r\n        this.password = pwd;\r\n    }\r\n}\r\n\r\nexport class addObj{\r\n    constructor(image, trackName, trackViewUrl, songUrl, artistUrl, username = \"\", likedSong = \"\", playlist = \"\"){\r\n        this.image = image;\r\n        this.trackName = trackName;\r\n        this.trackViewUrl = trackViewUrl;\r\n        this.songUrl = songUrl;\r\n        this.artistUrl = artistUrl;\r\n        this.username = username;\r\n        this.likedSong = likedSong;\r\n        this.playlist = playlist;\r\n        // this.isLiked = isLiked\r\n    }\r\n}","import * as firebase from 'firebase'\r\n\r\nexport const registerOperations = {\r\n  \r\n    addUser(userObj){\r\n     firebase.database().ref(\"/users/\"+userObj.username).set(userObj);\r\n    },\r\n    checkUsername(userObj){\r\n        var pr = new Promise((resolve,reject)=>{\r\n            var object = firebase.database().ref(\"/users/\"+userObj.username);\r\n            object.on('value', snapshot=>{\r\n                resolve(snapshot.val());\r\n            })\r\n        })\r\n        return pr;\r\n    }  \r\n }\r\n\r\n export const loginOperations = {\r\n     checkUser(userObj){\r\n         var promise = new Promise((resolve,reject)=>{\r\n            var object = firebase.database().ref(\"/users/\"+userObj.username);\r\n            object.on('value', snapshot=>{\r\n                // console.log(snapshot.val());\r\n                resolve(snapshot.val());\r\n            })\r\n         })\r\n       return promise;\r\n     }\r\n }\r\n export const songDbOperations = {\r\n     addUser(){\r\n         var username = localStorage.getItem('name');\r\n         console.log(username);\r\n         var pr = new Promise((resolve,reject)=>{\r\n             var obj = firebase.database().ref(\"/users/\"+username);\r\n             console.log(\"object is\",obj)\r\n             obj.on('value', snapshot=>{\r\n                 resolve(snapshot.val());\r\n             })\r\n         })\r\n         return pr;\r\n        \r\n     },\r\n     addSongToDb(song){\r\n       \r\n            firebase.database().ref(\"/songs/\"+song.trackName).set(song);\r\n            \r\n \r\n     },\r\n     addSongsForList(){\r\n         var pr = new Promise((resolve,reject)=>{\r\n             var obj = firebase.database().ref(\"/songs\");\r\n             obj.on('value', snapshot=>{\r\n                 resolve(snapshot.val());\r\n             })\r\n         })\r\n         return pr;\r\n     },\r\n     addLikedSongToDb(song){\r\n        firebase.database().ref(\"/likedSongs/\"+song.trackName).set(song);\r\n     },\r\n     addPlaylistToDb(song){\r\n         firebase.database().ref(\"/playlist/\"+song.trackName).set(song);\r\n     },\r\n     getPlaylistFromDb(){\r\n        var pr = new Promise((resolve,reject)=>{\r\n            var obj = firebase.database().ref(\"/playlist\");\r\n            obj.on('value', snapshot=>{\r\n                resolve(snapshot.val());\r\n            })\r\n        })\r\n        return pr;\r\n     }\r\n }\r\n","import React from 'react';\r\n\r\nexport const PlaySong = (props)=>{\r\n    console.log(\"play song\")\r\n    console.log(props.url);\r\n    return(\r\n        <div>\r\n            {/* <h2>Play songs</h2> */}\r\n            <div id = \"audioplayer\">\r\n            <audio src={props.url} controls id=\"audio\"></audio>\r\n            {/* <div className = \"row\">\r\n            <div className = \"col-lg-3\">\r\n            <button><i className = \"fas fa-play\"></i></button>\r\n            </div>\r\n            </div> */}\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport { PlaySong } from './playSong';\r\nimport { songDbOperations } from '../utils/dbOpr';\r\n\r\nexport class ListTheSongs extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.name = localStorage.getItem('name');\r\n        this.state = {url: \"\", like: \"\", remove :false};\r\n    }\r\n    playSongUrl(songUrl){\r\n        this.setState({ url : songUrl})\r\n    }\r\n\r\n    addToPlaylist(song){\r\n        song.playlist = this.name;\r\n        songDbOperations.addPlaylistToDb(song);\r\n        this.setState({...this.state, playlist: \"Song added to playlist\"});\r\n        this.props.fn();\r\n       \r\n    }\r\n   \r\n\r\n \r\n    render(){\r\n        // console.log(this.props.song)\r\n        return(\r\n            <div className = \"row\">\r\n                <img src={this.props.song.image} className = \"listImage\" alt=\"\"/>\r\n                <p className = \"name name1\">{this.props.song.trackName}</p>\r\n                <p className = \"name name2\">Uploaded by {this.props.song.username}</p>\r\n                <button className = \"btn btn-dark \" onClick ={()=>this.playSongUrl(this.props.song.songUrl)}>Play song</button>\r\n                {this.state.url? <PlaySong url = {this.state.url}/>:\"\"}\r\n                {!this.props.playsong? <button className = \"btn btn-dark listBtn\" onClick = {()=>this.addToPlaylist(this.props.song)}>Add to playlist</button>:\"\"}\r\n              \r\n                {this.state.playlist? alert(\"Song added to playlist\"): \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  \r\n","import React from 'react';\r\nimport { SongsList } from './SongsList';\r\nimport { ListTheSongs } from './ListTheSongs'\r\n\r\nexport const Playlist = (props)=>{\r\n   \r\n    return(\r\n        <div>\r\n            <div className = \"header header1\">\r\n            <h1>Your playlist</h1>\r\n            </div>\r\n            {props.playlist? props.playlist.map((song,i)=>{\r\n                return <ListTheSongs playsong = {props.playsong} key = {i} song = {song}/>\r\n            })\r\n             :\"\" }\r\n            {/* <SongsList */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Playlist } from './Playlist';\r\n\r\nexport const Song = (props)=>{\r\n    // document.querySelector('.col').innerHTML = \"\";\r\n    return(\r\n        <div className = \"col song\">\r\n            <img className = \"image\" src={props.song.image} alt=\"\"/>\r\n            <p className = \"songName\">{props.song.trackName}</p>\r\n            <button className = \"btn btn-dark dark1\" onClick = {()=>{props.add(props.song)}}>Add this song</button>\r\n            <a href={props.song.trackViewUrl} target = \"_blank\" className = \"btn btn-dark dark1\">More about this movie</a>\r\n\r\n            {/* <button onClick = {()=><Playlist/>}>Play this song</button> */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Song } from './Song';\r\nimport { ListTheSongs } from './ListTheSongs';\r\n\r\nexport const SongsList = (props)=>{\r\n   \r\n    return(\r\n        <div>\r\n            <div className = \"header header1\">\r\n            <h1>Songs List</h1>\r\n            </div>\r\n            \r\n            {/* <button onClick = {props.songListfn}>Load Songs</button> */}\r\n            {props.songList? props.songList.map((song,i)=>{\r\n                return <ListTheSongs fn = {props.fn} key = {i} song = {song}/>\r\n            })\r\n             :\"\" }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Song } from './Song';\r\n\r\nexport const AddSong = (props)=>{\r\n    return(\r\n        <div>\r\n               <h3>{props.msg}</h3>\r\n               <div className = \"header header1\">\r\n               <h1>Enter your favourite artist/singer</h1>\r\n               </div>\r\n         \r\n            <form onSubmit = {props.search}>\r\n            <input type=\"text\" id = \"input\" className = \"form-control\"/>\r\n            <button className = \"btn btn-dark dark\">Search</button>\r\n             <div id = \"clear\">\r\n             {props.songs && props.songs.length>0? props.songs.map((song, i)=>{\r\n            return <Song song = {song} key = {i} add = {(song)=>{props.add(song)}}/>\r\n            }) : \"\"\r\n          \r\n  \r\n        }\r\n        {props.songs?\r\n            <div className = \"header header2\"> \r\n                <h1>Want to get more songs by your favourite artist/actor? \r\n                    <a href={props.songs[0].artistUrl} target = \"_blank\" className = \"btn btn-dark\">Click here</a>\r\n                    </h1></div>\r\n          :\"\"}\r\n            </div>      \r\n            </form>\r\n           \r\n          \r\n          \r\n        </div>\r\n    )\r\n}","import {addObj} from './Class';\r\n\r\nexport const songOperations = {\r\n    songs : [],\r\n    fillSongs(songs){\r\n       \r\n        for(let song of songs){\r\n            this.songs.push(new addObj(song.artworkUrl100,song.trackName, song.trackViewUrl, song.previewUrl, song.artistViewUrl));\r\n        }\r\n        return this.songs;\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Login} from '../components/Login';\r\nimport {Register} from '../components/Register';\r\nimport { Nav } from '../components/Nav';\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport { Home } from '../components/Home';\r\nimport { registerObj, loginObj } from '../utils/Class';\r\nimport { registerOperations, loginOperations, songDbOperations } from '../utils/dbOpr';\r\nimport { SongsList } from '../components/SongsList';\r\nimport { AddSong } from '../components/AddSong';\r\nimport { Playlist } from '../components/Playlist';\r\nimport { Ajax } from '../utils/Ajax';\r\nexport class MusicApp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {regMsg: \"\", loginMsg: \"\", isUser: false, songsArray: \"\", songMsg: \"\", songsList: [], playlistSongs: []}\r\n    }\r\n    componentWillMount(){\r\n       \r\n        this.addSongsToList();\r\n    }\r\n    onRegister(event){\r\n        event.preventDefault();\r\n        var name = event.target.querySelector('#name').value;\r\n        var username = event.target.querySelector('#username').value;\r\n        var pwd = event.target.querySelector('#pwd').value;\r\n        if(name && username && pwd){\r\n            var userObject = new registerObj(name,username,pwd);\r\n            var pr = registerOperations.checkUsername(userObject);\r\n            pr.then(data=>{\r\n                if(data){\r\n                    alert(\"Username is already taken.\")\r\n                    // this.setState({regMsg: \"Username is already taken\"})\r\n                }\r\n                else{\r\n                    registerOperations.addUser(userObject);\r\n                    alert(\"Registered successfully\");\r\n                    this.setState({...this.state, isUser: true});\r\n                 \r\n                }\r\n            })\r\n        }\r\n        else{\r\n            alert(\"Please fill in all the fields.\")\r\n        }\r\n       \r\n       \r\n    }\r\n    onLogin(event){\r\n        event.preventDefault();\r\n        var username = event.target.querySelector('#username').value;\r\n        var pwd = event.target.querySelector('#pwd').value;\r\n        var userObject = new loginObj(username,pwd);\r\n        var pr = loginOperations.checkUser(userObject);\r\n        pr.then(data=>{\r\n            if(data){\r\n                if(data.password == pwd){\r\n                    this.setState({loginMsg: \"Logged in\", isUser: true});\r\n                    localStorage.setItem('name', username);\r\n                    this.loadPlaylist();\r\n                    alert(\"Welcome \"+localStorage.getItem('name'))\r\n                }\r\n                else{\r\n                    alert(\"Invalid Password\");\r\n                 \r\n                }\r\n            }\r\n            else{\r\n                alert(\"Invalid username or password\");\r\n            }\r\n          \r\n      \r\n        })\r\n    }\r\n    fillsongs(songs){\r\n    \r\n        this.setState({songsArray: songs});\r\n\r\n    }\r\n    searchSong(event){\r\n        event.preventDefault();\r\n        console.log(event.target);\r\n        // if( event.target.querySelector('#clear').innerHTML){\r\n        //     event.target.querySelector('#clear').innerHTML = \"\";\r\n       \r\n        //  }\r\n        var search = event.target.querySelector('#input').value;\r\n         Ajax(search, this.fillsongs.bind(this));\r\n       \r\n        \r\n    }\r\n    addSong(song){\r\n        var pr = songDbOperations.addUser();\r\n      \r\n        pr.then(data=>{\r\n          \r\n            if(data){\r\n                song.username = data.username;\r\n            }\r\n           songDbOperations.addSongToDb(song);\r\n            this.setState({...this.state, songMsg:\"Song Successfully added\"})\r\n          \r\n\r\n        })\r\n    }\r\n    addSongsToList(){\r\n        var pr = songDbOperations.addSongsForList();\r\n       \r\n        pr.then(data=>{\r\n            for(let key in data){\r\n               this.state.songsList.push(data[key]);\r\n            }\r\n            this.setState({...this.state, songsList: this.state.songsList})\r\n        })\r\n    }\r\n    loadPlaylist(){\r\n        var name = localStorage.getItem('name');\r\n        var pr = songDbOperations.getPlaylistFromDb();\r\n        pr.then(data=>{\r\n            for(let key in data){\r\n                if(data[key].playlist == name){\r\n                    this.state.playlistSongs.push(data[key]);\r\n                }\r\n            }\r\n            this.setState({...this.state, playlistSongs: this.state.playlistSongs})\r\n        })\r\n    }\r\n    \r\n    render(){\r\n     \r\n        return(\r\n            <div>\r\n                <Nav isUser = {this.state.isUser}/>\r\n              {this.state.isUser?  <Home/>:\r\n                <Switch>\r\n                    <Route exact path = \"/\" component = {Home}></Route>\r\n                    <Route exact path = \"/MusicStore\" component = {Home}/>\r\n                    <Route path = \"/login\" render = {(props)=>{\r\n                        return <Login login = {this.onLogin.bind(this)} loginMsg = {this.state.loginMsg}/>\r\n                    }}></Route>\r\n                    <Route path = \"/register\" render = {(props)=>{\r\n                        return <Register regMsg = {this.state.regMsg} reg = {this.onRegister.bind(this) }/>\r\n                    }}></Route>\r\n                </Switch>\r\n              }\r\n              <Switch>\r\n              <Route exact path = \"/list\" render = {()=>{\r\n                  return <SongsList songList = {this.state.songsList} fn = {this.loadPlaylist.bind(this)}/>}}/>\r\n                  <Route path = \"/addSong\" render = {()=>{\r\n                      return <AddSong msg = {this.state.songMsg} songs = {this.state.songsArray} search = {this.searchSong.bind(this)} add = {this.addSong.bind(this)}/>\r\n                  }}/>\r\n                  <Route path = \"/playlist\" render = {()=><Playlist playsong = {true} playlist = {this.state.playlistSongs}/>}/>\r\n              </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}","import { addObj } from \"./Class\";\r\nimport { songOperations } from \"./songOpr\";\r\n\r\nexport const Ajax = (search, fn)=>{\r\n    var url = \"https://itunes.apple.com/search?term=\"+search+\"&limit=24\";\r\n    fetch(url).then(response=>{\r\n        response.json().then(data=>{\r\n            var songs = songOperations.fillSongs(data.results);\r\n            fn(songs);\r\n        })\r\n    })\r\n}","import React, { Component } from 'react';\nimport {MusicApp} from './containers/MusicApp'\nimport '../node_modules/bootstrap/dist/js/bootstrap'\nimport '../node_modules/font-awesome/css/font-awesome.css'\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <MusicApp/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {config} from './utils/db';\nimport * as firebase from 'firebase';\nfirebase.initializeApp(config);\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const config = {\r\n    apiKey: \"AIzaSyDrfIM6O1FdKnubH_Y9K6yAUsOXUJRjVdM\",\r\n    authDomain: \"musicapp-ee2eb.firebaseapp.com\",\r\n    databaseURL: \"https://musicapp-ee2eb.firebaseio.com\",\r\n    projectId: \"musicapp-ee2eb\",\r\n    storageBucket: \"musicapp-ee2eb.appspot.com\",\r\n    messagingSenderId: \"409913595928\"\r\n  };\r\n "],"sourceRoot":""}